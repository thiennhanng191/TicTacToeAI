#BlueJ class context
comment0.target=CpuTicPlayer
comment0.text=\ \r\n\ Representing\ a\ cpu\ player\ in\ the\ TicTacToe\ game,\ whose\ moves\ are\ generated\ randomly\r\n\ @author\ Nhan\ Nguyen\r\n\ @version\ CMPU-102-Homework2\ 2.0\r\n
comment1.params=game
comment1.target=CpuTicPlayer(TicGame)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ CpuTicPlayer\r\n
comment10.params=
comment10.target=char\ getSymbol()
comment10.text=\r\n\ return\ a\ symbol\ representing\ the\ move\ of\ cpu\ player.\r\n\ @return\ character\ 'O'\ for\ cpu\ player.\r\n
comment2.params=
comment2.target=TicMove\ pickMove()
comment2.text=\ \r\n\ make\ a\ move\ at\ random\ by\ generating\ random\ moves\ inside\ the\ range\ of\r\n\ \ \ \ the\ board,\ looping\ until\ the\ move\ is\ valid.\r\n\ @specified\ by\ pickMove\ in\ class\ ATicPlayer.\r\n\ @return\ the\ satisfied\ random\ move.\r\n
comment3.params=
comment3.target=boolean\ checkRowAlmostFull()
comment3.text=\ \r\n\ check\ if\ a\ row\ is\ almost\ full,\ that\ is\ all\ the\ moves\ in\ a\ row\ but\ one\ have\ been\ played\ by\ the\ same\ user,\r\n\ \ \ \ either\ the\ cpu\ or\ human.\ update\ the\ lastMoveRow\ and\ lastMoveRow\ which\ is\ the\ position\ of\ cpu's\ next\ move\r\n\ \ \ \ (cpu's\ next\ move\ will\ occupy\ the\ only\ blank\ position\ left\ in\ the\ row).\r\n\ @return\ true\ if\ the\ row\ is\ almost\ full,\ that\ is\ one\ of\ the\ users\ almost\ wins;\ false\ otherwise.\r\n
comment4.params=
comment4.target=boolean\ checkColAlmostFull()
comment4.text=\ \r\n\ check\ if\ a\ column\ is\ almost\ full,\ that\ is\ all\ the\ moves\ in\ a\ column\ but\ one\ have\ been\ played\ by\ the\ same\ user,\r\n\ \ \ \ either\ the\ cpu\ or\ human.\ update\ the\ lastMoveRow\ and\ lastMoveCol\ which\ is\ the\ position\ of\ cpu's\ next\ move\r\n\ \ \ \ (cpu's\ next\ move\ will\ occupy\ the\ only\ blank\ position\ left\ in\ the\ columm).\r\n\ @return\ true\ if\ the\ column\ is\ almost\ full,\ that\ is\ one\ of\ the\ users\ almost\ wins;\ false\ otherwise.\r\n
comment5.params=
comment5.target=boolean\ checkLeftDiagonalAlmostFull()
comment5.text=\ \r\n\ check\ if\ the\ left\ diagonal\ of\ the\ board\ is\ almost\ full,\ that\ is\ all\ the\ moves\ in\ a\ the\ diagonal\ but\ one\ have\ been\ played\ by\ the\ same\ user,\r\n\ \ \ \ either\ the\ cpu\ or\ human.\ update\ the\ lastMoveRow\ and\ lastMoveCol\ which\ is\ the\ position\ of\ cpu's\ next\ move\r\n\ \ \ \ (cpu's\ next\ move\ will\ occupy\ the\ only\ blank\ position\ left\ in\ the\ diagonal).\r\n\ @return\ true\ if\ the\ left\ diagonal\ is\ almost\ full,\ that\ is\ one\ of\ the\ user\ almost\ wins;\ false\ otherwise.\r\n
comment6.params=
comment6.target=boolean\ checkRightDiagonalAlmostFull()
comment6.text=\ \r\n\ check\ if\ the\ right\ diagonal\ of\ the\ board\ is\ almost\ full,\ that\ is\ all\ the\ moves\ in\ a\ the\ diagonal\ but\ one\ have\ been\ played\ by\ the\ same\ user,\r\n\ \ \ \ either\ the\ cpu\ or\ human.\ update\ the\ lastMoveRow\ and\ lastMoveCol\ which\ is\ the\ position\ of\ cpu's\ next\ move\r\n\ \ \ \ (cpu's\ next\ move\ will\ occupy\ the\ only\ blank\ position\ left\ in\ the\ diagonal).\r\n\ @return\ true\ if\ the\ right\ diagonal\ is\ almost\ full,\ that\ is\ one\ of\ the\ user\ almost\ wins;\ false\ otherwise.\r\n
comment7.params=ticMove
comment7.target=TicMove\ pickNextMove(TicMove)
comment7.text=\r\n\ make\ the\ cpu's\ next\ move\ strategy.\ in\ general,\ the\ strategy\ is\ to\ generate\ the\ cpu's\ next\ move\ in\ \r\n\ \ \ \ one\ of\ the\ empty\ positions\ around\ the\ cpu's\ current\ move.\ if\ either\ the\ row\ or\ column\ or\ diagonal\ \r\n\ \ \ \ has\ been\ occupied\ with\ all\ the\ same\ move\ but\ one\ then\ the\ cpu's\ next\ move\ would\ be\ in\ that\ only\ \r\n\ \ \ \ blank\ position\ to\ prevent\ human\ player\ from\ winning\ or\ to\ make\ cpu\ win.\r\n\ @param\ ticMove\ the\ cpu's\ current\ move\r\n\ @return\ the\ cpu's\ next\ move\ based\ on\ the\ cpu's\ current\ move.\ \r\n
comment8.params=
comment8.target=TicMove\ pickFirstMove()
comment8.text=\r\n\ make\ the\ cpu's\ first\ move,\ cpu's\ first\ move\ is\ either\ in\ a\ corner\ of\ the\ game\ board\ or\ in\ the\ center\ \r\n\ \ \ \ \ \ \ of\ the\ board.\r\n\ @return\ the\ cpu's\ first\ move\ with\ the\ above\ strategy.\r\n
comment9.params=ticMove
comment9.target=boolean\ checkSurrounded(TicMove)
comment9.text=\r\n\ check\ if\ the\ cpu's\ move\ is\ surrounded,\ that\ is\ all\ the\ moves\ around\ it\ have\ been\ played\r\n\ @param\ ticMove\ the\ cpu's\ current\ move.\r\n\ @return\ true\ if\ the\ cpu's\ move\ is\ surrounded,\ false\ otherwise.\r\n
numComments=11
